definitions:
  model.ToDo:
    properties:
      Desc:
        type: string
      DueDate:
        type: string
      ID:
        type: integer
      PersonInCharge:
        type: integer
      Status:
        type: integer
      Title:
        type: string
    type: object
  model.User:
    properties:
      Name:
        type: string
      userID:
        type: integer
    type: object
info:
  contact:
    email: muh.reyhan@gmail.com
    name: Muhammad Reyhan
  description: Final Project Hacktiv8
  termsOfService: http://swagger.io/terms/
  title: Hacktiv8 Final Project - Muhammad Reyhan
  version: "1.0"
paths:
  /api/todo:
    delete:
      consumes:
      - application/json
      description: Delete Todo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToDo'
        "500":
          description: ""
      summary: Delete Todo
    get:
      consumes:
      - application/json
      description: Get specific todo by ID
      parameters:
      - description: todo serarch by id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToDo'
        "500":
          description: ""
      summary: Get specific todo by ID
    post:
      consumes:
      - application/json
      description: Create new Todo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToDo'
        "500":
          description: ""
      summary: Create Todo
    put:
      consumes:
      - application/json
      description: Update Todo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToDo'
        "500":
          description: ""
      summary: Update Todo
  /api/todos:
    get:
      consumes:
      - application/json
      description: Get All Todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ToDo'
        "500":
          description: ""
      summary: Show all available todos
  /user:
    delete:
      consumes:
      - application/json
      description: Delete User by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: ""
      summary: Delete User
    post:
      consumes:
      - application/json
      description: Add User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: ""
      summary: Add User
    put:
      consumes:
      - application/json
      description: Update User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: ""
      summary: Update User
swagger: "2.0"
